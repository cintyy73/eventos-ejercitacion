const $ =(selector)=>document.querySelector(selector);

/*Ejercicios
playlist
Crear un documento html con un t칤tulo que diga Mis canciones favoritas y una lista desordenada. Pedir mediante prompts por cinco canciones (una a la vez), y agregar esas canciones como 칤tems de la lista desordenada*/

// const tema1 = prompt('Ingrese la cancion n췈 uno');
// const tema2 = prompt('Ingrese la cancion n췈 dos');
// const tema3 = prompt('Ingrese la cancion n췈 tres');
// const tema4 = prompt('Ingrese la cancion n췈 cuatro');
// const tema5 = prompt('Ingrese la cancion n췈 cinco');

// const ul = $('.list');

// ul.innerHTML=`
// <li>1-${tema1}.</li>
// <li>2-${tema2}.</li>
// <li>3-${tema3}.</li>
// <li>4-${tema4}.</li>
// <li>5-${tema5}.</li>`

/*contador
Crear un documento html que muestre un n칰mero (empezando en 0) y 6 botones con los siguientes valores: -1, +1, -5, +5, -10, +10. Cuando se clickea un bot칩n, se tiene que sumar o restar la cantidad correspondiente, y actualizar el n칰mero mostrado.*/


const x = $('p');




const btnMas1 = $('.btn-masUno');
const btnMenos1 = $('.btn-menosUno');
const btnMas5 = $('.btn-masCinco');
const btnMenos5 = $('.btn-menosCinco');
const btnMas10 = $('.btn-masDiez');
const btnMenos10 = $('.btn-menosDiez');


const suma1 = (num) => num+1;
const suma5 = (numberX) => numberX+5;
const suma10 = (numberX) => numberX+10;
const resta1 = (numberX) => numberX-1;
const resta5 = (numberX) => numberX-5;
const resta10 = (numberX) => numberX-10;

btnMas1.addEventListener("click", ()=>{
    x.innerHTML=suma1(Number(x.innerText))
})

btnMas5.addEventListener("click", ()=>{
    x.innerHTML=suma5(Number(x.innerText));
})

btnMas10.addEventListener("click", ()=>{
    x.innerHTML=suma10(Number(x.innerText))
})

btnMenos1.addEventListener("click", ()=>{
    x.innerHTML=resta1(Number(x.innerText))
})

btnMenos5.addEventListener("click", ()=>{
    x.innerHTML=resta5(Number(x.innerText))
})

btnMenos10.addEventListener("click", ()=>{
    x.innerHTML=resta10(Number(x.innerText))
})

/*
//solo suma una vez al numero inicial 

/*adivinanza
Crear un documento html con una adivinanza (o una pregunta) y 3 botones con posibles respuestas. Si se clickea la respuesta correcta, se debe mostrar en el documento un texto que lo indique (por ejemplo: 춰Correcto!) debajo de la adivinanza, y el bot칩n seleccionado debe ponerse con un color de fondo verde. Si se clickea una respuesta incorrecta, se debe mostrar en el documento un texto que lo indique (por ejemplo: 춰Le erraste!) y mostrar el bot칩n con la respuesta correcta con un color de fondo verde y los otros dos con un color de fondo rojo.*/ 

const cartel = $('.cartel')
const btn = $('.button') 
const btnT = $('.btnT')
const btnF1 = $('.btnF1') 
const btnF2 = $('.btnF2') 



btnT.addEventListener("click", ()=>{
    btnT.classList.add("trueClass");
    btnF1.classList.add("falseClass");
    btnF2.classList.add("falseClass");
    cartel.innerHTML=`
    <div class="trueClass">
        <h3>Tu s칤 que sabes!!!</h3>
    </div>`
})

btnF1.addEventListener("click", ()=>{
    btnT.classList.add("trueClass");
    btnF1.classList.add("falseClass");
    btnF2.classList.add("falseClass");

    cartel.innerHTML=`
    <div class="falseClass">
        <h3>Falsoo!!</h3>
    </div>`
})

btnF2.addEventListener("click", ()=>{
    btnT.classList.add("trueClass");
    btnF1.classList.add("falseClass");
    btnF2.classList.add("falseClass");

    cartel.innerHTML=`
    <div class="falseClass">
        <h3>Falsoo!!</h3>
    </div>`
})
/////como hacer if else del click o 
/*
paleta
Crear un documento html que tenga 6 botones con un color de fondo distinto, y un div cuadrado grande. Cuando se clickea un bot칩n, el div debe cambiar su color de fondo al mismo color de fondo que el del bot칩n clickeado.*/

const container= $('.container')
const btnBlue= $('.blue')
const btnRed= $('.red')
const btnPink= $('.pink')
const btnOrange= $('.orange')
const btnYellow= $('.yellow')
const btnBlack= $('.black')

btnBlue.addEventListener ("click", ()=>
{
    container.style.backgroundColor="blue"
})
btnRed.addEventListener ("click", ()=>
{
    container.style.backgroundColor="red"
})
btnPink.addEventListener ("click", ()=>
{
    container.style.backgroundColor="pink"
})
btnOrange.addEventListener ("click", ()=>
{
    container.style.backgroundColor="orange"
})
btnYellow.addEventListener ("click", ()=>
{
    container.style.backgroundColor="yellow"
})
btnBlack.addEventListener ("click", ()=>
{
    container.style.backgroundColor="black"
})

//si uso toggle pone y saca... si uso add una vez q a침ade todas quda con la ultima.. cambio style!!!?????*/

/*email (sin leer)
Crear un documento html que tenga:

un t칤tulo h1 que diga: Mis emails
un t칤tulo h2 que diga: Bandeja de entrada
una lista desordenada con 10 칤tems con lorem ipsum (4 o 5 palabras cada uno, no un p치rrafo entero)
Inicialmente los 칤tems deben estar en negrita y con color negro. Cuando se clickea uno de ellos, se debe sacarle la negrita y ponerle un color gris (simulando que el email fue le칤do)*/

const lia = $(".a")
const lib = $(".b")
const lic = $(".c")
const lid = $(".d")
const lie = $(".e")
const lif = $(".f")
const lig = $(".g")
const lih = $(".h")
const lii = $(".i")
const lij = $(".j")

lia.addEventListener("click", () => {
    lia.classList.toggle("leido")
})
lib.addEventListener("click", () => {
    lib.classList.toggle("leido")
})
lic.addEventListener("click", () => {
    lic.classList.toggle("leido")
})
lid.addEventListener("click", () => {
    lid.classList.toggle("leido")
})
lie.addEventListener("click", () => {
    lie.classList.toggle("leido")
})
lif.addEventListener("click", () => {
    lif.classList.toggle("leido")
})
lig.addEventListener("click", () => {
    lig.classList.toggle("leido")
})
lih.addEventListener("click", () => {
    lih.classList.toggle("leido")
})
lii.addEventListener("click", () => {
    lii.classList.toggle("leido")
})
lij.addEventListener("click", () => {
    lij.classList.toggle("leido")
})
/*
progreso
Crear un documento html con

una barra de progreso (con un div dentro de otro)
un elemento de texto que indique el progreso (p. ej. 50%)
dos botones, uno para incrementar y otro para dismininuir la barra (- y +)
cuando se apretan los botones, la barra de progreso tiene que aumentar o disminuir respectivamente y el texto que indica el porcentaje de progreso tiene que actualizarse
lo mismo tiene que pasar cuando se apreta la flecha derecha (aumentar progreso) y la flecha izquierda (disminuir progreso)
el incremento/decremento es del 10%*/

const btnMas10P = $('.btn-masDiezP');
const btnMenos10P = $('.btn-menosDiezP');
const xP = $('.estadoP');
const divP = $(".progreso")


btnMenos10P.addEventListener("click", ()=>{
    xP.innerHTML=resta10(Number(xP.innerText))
   // let printP = `"${resta10(Number(xP.innerText))}%"`;no!
   // divP.style.width=????
     //como poner el valor q se incrementa 
    //procentaje del width
})


btnMas10P.addEventListener("click", ()=>{
    xP.innerHTML=suma10(Number(xP.innerText))
    
})



/*
modo-oscuro
Crear un documento html con un t칤tulo, un p치rrafo y un b칩t칩n con un 칤cono. Centrar los elementos, cambiar los tama침as y tipograf칤a del texto y tama침o del 칤cono. Hacer que el body ocupe toda la pantalla. Al clickear el bot칩n, debe alternar entre modo oscuro y modo claro:

modo oscuro: body con color de fondo negro, texto e 칤cono con color blanco, 칤cono de sol
modo claro: body con color de fondo blanco, texto e 칤cono con color negro, 칤cono de luna*/
const page = $("#modo") 
const btnTema = $(".tema")
const divBTN = $("btn-modo-cont")

btnTema.addEventListener("click", ()=>{
    page.classList.toggle("modoOscuro" );
    if(btnTema.innerText==="游꺀 Modo oscuro"){
        btnTema.innerText="游땙 Modo claro" 
    }
    else {
        btnTema.innerText="游꺀 Modo oscuro"
    }
        
    // btnTema.style.display="none"
    // divBTN.innerHTML=`<button class="tema">游꺀Modo claro</button>`
})

/*
scroll
Crear un documento html con un body de 2000px de alto. Cuando se scrollea el body, cambiar el color de fondo cada 500px, por ejemplo:

Scroll	Color de fondo
0px - 500px	red
501px - 1000px	green
1001px - 1500px	blue
1501px - 2000px	orange*/

// const redBG = $("red.BG");
// const greenBG = $("green.BG");
// const blueBG = $("blue.BG");
// const orangeBG = $("orange.BG");

// redBG.addEventListener("scroll")  , (=>{
//     main.style.backgroundColor="red"
// } 
// )
// greenBG.addEventListener("scroll", ()=>{
//     main.style.backgroundColor="green"
// })

// blueBG.addEventListener("scroll", ()=>{
//     main.style.backgroundColor="blue"
// })

// orangeBG.addEventListener("scroll", ()=>{
//     main.style.backgroundColor="orange"
// }) no es lo que pedia el ejercicio
/*const body = $("body")


const scrollear = ()=>{
    if(body.getElement.scrollTop>500 && body.getElement.scrollTop<1000){
     body.classList.add("red")
    }
    else if(body.getElement.scrollTop>1000 && body.getElement.scrollTop<1500){
       body.classList.add("green")
    }
    else if(body.getElement.scrollTop>1500 && body.getElement.scrollTop<2000){
       body.classList.add("blue")
    }
    else if(body.getElement.scrollTop>2000 && body.getElement.scrollTop<2500){
        body.classList.add("orange")
    }
    else{
        body.classList.add("pink")

    }
}
scrollear()*/
/*
imagenes
Crear un documento html con al menos 4 im치genes chicas (100px de alto) y una imagen grande (500px de alto). Cuando se clickean las im치genes chicas, la imagen grande se tiene que actualizar con la misma que la imagen chica clickeada.

imagenes-2
Repetir el ejercicio anterior, pero en vez de cambiar la imagen grande cuando se clickean las im치genes chicas, hacerlo cuando se pasa el mouse por encima de las im치genes chicas.

peliculas
Crear un documento html con 12 im치genes de posters de pel칤culas. Buscar im치genes de pel칤culas de 3 g칠neros (acci칩n, aventura, ciencia ficci칩n, comedia, etc), 4 pel칤culas por g칠nero. Agregar al documento un bot칩n por cada g칠nero, y un bot칩n que diga Todas. Cuando se clickea el bot칩n de un g칠nero, se tienen que mostrar s칩lo las pel칤culas correspondientes a ese g칠nero. Cuando se clickea el bot칩n Todas se tienen que mostrar todas las pel칤culas.

pin
En un documento html crear botones con n칰meros del 0 al 9, un bot칩n para reiniciar, un bot칩n para borrar, y un elemento de texto.
Cuando se presionan los botones de n칰meros, se tienen que ir agregando los n칰meros en el elemento de texto. Por ejemplo, si se presiona el 1 y despu칠s el 3, se tiene que mostrar "13".
El m치ximo de d칤gitos que se pueden ingresar es 6, cuando ya hay 6 d칤gitos ingresados y se clickea un nuevo n칰mero, no debe pasar nada.
El bot칩n de reiniciar debe borrar todos los d칤gitos del elemento de texto.
El bot칩n de borrar debe borrar el 칰ltimo d칤gito del elemento de texto. Por ejemplo, si el pin ingresado es 2544 y se presiona la tecla borrar, debe quedar en 254.
favoritos
Crear dos contenedores, uno para im치genes y otro para favoritos. En el contenedor de im치genes, agregar al menos 10 im치genes (cualesquiera). Al clickear una imagen en el contenedor de im치genes, se debe agregar la misma imagen en el contenedor de favoritos. Al clickear una imagen en el contenedor de favoritos, se debe eliminar la imagen seleccionada de dicho contenedor.

color-aleatorio
Hacer un programa que al apretar la tecla espacio, cambie el color de fondo del body por un color aleatorio. Para eso, crear una funci칩n obtenerColorAleatorio() que devuelva un string con el formato de ejemplo rgb(0,0,0) donde los valores de r, g y b se generan aleatoriamente (con n칰meros del 1 al 255).

adivinar-numero
Crear un programa que genere un n칰mero aleatorio entre 0 y 9. Cuando se presiona un n칰mero en el teclado, el programa debe mostrar en el documento html un mensaje:

si el n칰mero seleccionado es m치s grande que el n칰mero aleatorio generado, debe mostrar El n칰mero es m치s chico
si el n칰mero seleccionado es m치s chico que el n칰mero aleatorio generado, debe mostrar El n칰mero es m치s grande
si el n칰mero seleccionado es igual al n칰mero aleatorio generado, debe mostrar Adivinaste.
El mensaje tambi칠n debe incluir el n칰mero ingresado (por ejemplo, N칰mero ingresado: 3). El mensaje debe mostrarse en un elemento del documento html, no en un alert.

Por ejemplo:

N칰mero aleatorio: 7 (No se muestra)
Usuario presiona 3
"El n칰mero es m치s grande. N칰mero ingresado: 3"
Usuario presiona 9
"El n칰mero es m치s chico. N칰mero ingresado: 9"
Usuario presiona 7
"Adivinaste. N칰mero ingresado: 7"
El documento tambi칠n debe tener un bot칩n que diga Reiniciar, que genere un nuevo n칰mero y actualice el mensaje para indicarlo (por ejemplo 춰Nueva partida! Presione un n칰mero.)*/